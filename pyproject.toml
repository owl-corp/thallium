[tool.poetry]
name = "thallium"
version = "1.2.0"
description = "Distribute printful prizes to winners."
authors = ["Chris Lovering <chris.lovering.95@gmail.com>"]
license = "MIT"
package-mode = false

[tool.poetry.dependencies]
python = "3.12.*"

litestar = { version = "^2.10.0", extras = ["standard"] }
pydantic = "^2.8.2"
pydantic-settings = "^2.4.0"

[tool.poetry.group.linting.dependencies]
pre-commit = "^3.8.0"
ruff = "^0.5.5"

[tool.poetry.group.dev.dependencies]
poetry-plugin-export = "*"

[tool.poetry.group.test.dependencies]
pytest  ="^8.3.2"
pytest-asyncio = "^0.23.8"
pytest-xdist = "^3.6.1"

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
extend-exclude = [".cache"]
line-length = 120
unsafe-fixes = true
preview = true
output-format = "concise"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN002", "ANN003", "ANN101", "ANN102",
    "C901",
    "CPY001",
    "D100", "D104", "D105", "D107", "D203", "D212", "D214", "D215", "D416",

    # Rules suggested to be ignored when using ruff format
    "COM812", "COM819", "D206", "E111", "E114", "E117", "E501", "ISC001", "Q000", "Q001", "Q002", "Q003", "W191"
]

[tool.ruff.lint.isort]
known-first-party = ["tests", "thallium"]
order-by-type = false
case-sensitive = true
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D103", "S101"]

[tool.pytest.ini_options]
# addopts = "--ignore=examples"
asyncio_mode = "auto"
