[tool.poetry]
name = "python-template"
version = "1.2.0"
description = "A template project for Python applications."
authors = ["Chris Lovering <chris.lovering.95@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "3.12.*"

pydantic = "*"
pydantic-settings = "*"

[tool.poetry.group.linting.dependencies]
pre-commit = "*"
ruff = "*"

[tool.poetry.group.dev.dependencies]
poetry-plugin-export = "*"

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
extend-exclude = [".cache"]
line-length = 120
unsafe-fixes = true
preview = true
output-format = "concise"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN002", "ANN003", "ANN101", "ANN102",
    "C901",
    "CPY001",
    "D100", "D104", "D105", "D107", "D203", "D212", "D214", "D215", "D416",

    # Rules suggested to be ignored when using ruff format
    "COM812", "COM819", "D206", "E111", "E114", "E117", "E501", "ISC001", "Q000", "Q001", "Q002", "Q003", "W191"
]

[tool.ruff.lint.isort]
known-first-party = ["app"]
order-by-type = false
case-sensitive = true
combine-as-imports = true
