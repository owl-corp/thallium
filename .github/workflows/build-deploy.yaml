on:
  workflow_call:
    inputs:
      sha-tag:
        description: "A short-form SHA tag for the commit that triggered this flow"
        required: true
        type: string
      project:
        description: "The project to build and push"
        required: true
        type: string
      dockerfile:
        description: "The Dockerfile to use for the build"
        required: false
        type: string
        default: "Dockerfile"

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Fetch project version (Backend)
        if: ${{ inputs.project == 'backend' }}
        run: >-
          echo "THALLIUM_SEMVER=$(cat pyproject.toml | grep '^version =') | grep -Po '(\d+\.){2}\d+')" >> $GITHUB_ENV

      # Build and push the container to the GitHub Container
      # Repository. The container will be tagged as "latest"
      # and with the short SHA of the commit.
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: thallium-${{ inputs.project }}
          file: thallium-${{ inputs.project }}/${{ inputs.dockerfile }}
          push: ${{ github.ref == 'refs/heads/main' }}
          cache-from: type=registry,ref=ghcr.io/owl-corp/thallium-${{ inputs.project }}:latest
          cache-to: type=inline
          tags: |
            ghcr.io/owl-corp/thallium-${{ inputs.project }}:latest
            ghcr.io/owl-corp/thallium-${{ inputs.project }}:${{ inputs.sha-tag }}
          build-args: |
            git_sha=${{ github.sha }}
            thallium_semver=${{ env.THALLIUM_SEMVER || '' }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && inputs.project == 'backend' }}
    steps:
      - name: Checkout Kubernetes repository
        uses: actions/checkout@v4
        with:
          repository: python-discord/infra
          path: infra

      - uses: azure/setup-kubectl@v4

      - name: Authenticate with Kubernetes
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes
        uses: azure/k8s-deploy@v5
        with:
          namespace: merch
          manifests: |
            infra/kubernetes/namespaces/merch/deployment.yaml
          images: "ghcr.io/owl-corp/thallium-${{ inputs.project }}:${{ inputs.sha-tag }}"
